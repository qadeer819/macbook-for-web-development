{
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "files.associations": {
    "*.atml": "html",
    ".huskyrc": "json",
    "*.mdx": "markdown",
    "*.fish": "powershell",
    ".babelrc": "json",
    "*.js": "javascript"
  },
  "search.showLineNumbers": true,
  "terminal.integrated.minimumContrastRatio": 3,
  "eslint.packageManager": "yarn",
  "vsintellicode.sql.completionsEnabled": false,
  "explorer.experimental.fileNesting.patterns": {
    "//": "Last update at 5/3/2022, 5:22:20 PM",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock",
    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers.md, changelog*, citation*, code_of_conduct.md, codeowners, contributing.md, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors.md",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "rush.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  },
  "javascript.preferences.quoteStyle": "single",
  "workbench.editor.closeOnFileDelete": true,
  "explorer.experimental.fileNesting.expand": false,
  "editor.suggest.showStatusBar": true,
  "npm.packageManager": "yarn",
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "editor.tabSize": 2,
  "editor.minimap.maxColumn": 80,
  "typescript.inlayHints.parameterNames.enabled": "literals",
  "vsintellicode.features.python.deepLearning": "disabled",
  "gitlens.blame.ignoreWhitespace": true,

  "workbench.editor.decorations.badges": true,
  "editor.guides.indentation": false,
  "search.quickOpen.includeSymbols": false,
  "errorLens.removeLinebreaks": false,
  "editor.fontWeight": 500,
  "editor.unfoldOnClickAfterEndOfLine": true,
  "[markdown]": {
    "editor.quickSuggestions": false
  },
  "workbench.editor.decorations.colors": true,
  "editor.codeLensFontFamily": "\"JetBrains Mono\"",
  "vsintellicode.java.completionsEnabled": false,
  "incrementor.enums": [
    ["false", "true"],
    ["let", "const"],
    ["flex", "inline-flex", "block", "inline-block", "inline", "none"]
  ],
  "workbench.preferredLightColorTheme": "GitHub Light",
  "gitlens.views.repositories.files.layout": "list",
  "git.suggestSmartCommit": false,
  "editor.renderWhitespace": "all",
  "gitlens.advanced.messages": {
    "suppressFileNotUnderSourceControlWarning": true,
    "suppressGitMissingWarning": true
  },
  "workbench.view.alwaysShowHeaderActions": true,
  "typescript.referencesCodeLens.enabled": true,
  "prettier.singleQuote": true,
  "color-highlight.markerType": "underline",
  "javascript.suggest.completeFunctionCalls": true,
  "editor.gotoLocation.multipleImplementations": "goto",
  "php.suggest.basic": false,
  "css.validate": true,
  "workbench.settings.openDefaultSettings": false,
  "git.confirmSync": false,
  "editor.linkedEditing": true,
  "city-lights-icons-vsc.hidesExplorerArrows": true,
  "emmet.showSuggestionsAsSnippets": true,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.editor.wrapTabs": true,
  "workbench.startupEditor": "newUntitledFile",
  "references.preferredLocation": "view",
  "workbench.editor.limit.enabled": true,
  "files.autoSave": "afterDelay",
  "gitlens.blame.avatars": false,
  "editor.snippetSuggestions": "top",
  "explorer.confirmDelete": false,
  "editor.fontFamily": "\"Comic Code\", \"JetBrains Mono\", \"SF Mono\", \"IBMPlexMono\", \"Fira Code\", \"Dank Mono\", monospace",
  "github.copilot.enable": {
    "yaml": true,
    "*": true,
    "plaintext": true,
    "markdown": true
  },
  "gitlens.codeLens.recentChange.enabled": false,
  "editor.wordWrap": "off",
  "editor.fontSize": 14,
  "window.restoreFullscreen": true,
  "workbench.colorTheme": "poimandres",
  "editor.cursorStyle": "block",
  "auto-rename-tag.activationOnLanguage": ["*"],
  "typescript.updateImportsOnFileMove.enabled": "always",
  "terminal.integrated.macOptionClickForcesSelection": true,
  "search.smartCase": true,
  "git.inputValidationSubjectLength": 72,
  "emmet.showAbbreviationSuggestions": true,
  "markdown.extension.syntax.plainTheme": true,
  "terminal.integrated.lineHeight": 1.2,
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "workbench.editor.revealIfOpen": true,
  "gitlens.keymap": "alternate",
  "merge-conflict.diffViewPosition": "Below",
  "editor.insertSpaces": true,
  "liveshare.featureSet": "stable",
  "gitlens.hovers.annotations.enabled": false,
  "editor.gotoLocation.multipleDefinitions": "goto",
  "breadcrumbs.enabled": true,
  "errorLens.messageTemplate": "($source) $message",
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "workbench.list.defaultFindMode": "filter",
  "typescript.tsserver.log": "off",
  "typescript.locale": "en",
  "editor.guides.bracketPairs": false,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "svelte.enable-ts-plugin": true,
  "editor.hideCursorInOverviewRuler": true,
  "explorer.experimental.fileNesting.enabled": true,
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.formatOnSave": true,
  "editor.suggest.localityBonus": true,
  "workbench.editor.limit.value": 20,
  "keyboard.touchbar.enabled": true,
  "js/ts.implicitProjectConfig.experimentalDecorators": true,
  "gitlens.hovers.annotations.changes": false,
  "extensions.ignoreRecommendations": true,
  "typescript.preferences.quoteStyle": "single",
  "editor.tabCompletion": "on",
  "githubPullRequests.fileListLayout": "flat",
  "editor.gotoLocation.multipleReferences": "goto",
  "typescript.tsdk": "/usr/local/lib/node_modules/typescript/lib",
  "git.autofetch": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "editor.suggest.preview": true,
  "editor.showFoldingControls": "always",
  "projectManager.git.baseFolders": [],
  "javascript.referencesCodeLens.showOnAllFunctions": true,
  "javascript.preferences.importModuleSpecifierEnding": "minimal",
  "editor.inlineSuggest.enabled": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.layoutControl.enabled": true,
  "monokaiPro.fileIconsMonochrome": true,
  "workbench.colorCustomizations": {
    "editor.lineHighlightBackground": "#1073cf2d",
    "editor.lineHighlightBorder": "#9fced11f"
  },
  "window.title": "${rootName}",
  "window.restoreWindows": "all",
  "git.allowNoVerifyCommit": true,
  "workbench.editor.tabCloseButton": "left",
  "typescript.suggest.completeFunctionCalls": true,
  "editor.lineHeight": 23,
  "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
  "html-css-class-completion.enableEmmetSupport": true,
  "eslint.run": "onSave",
  "files.simpleDialog.enable": true,
  "jest.autoRun": "off",
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "editor.autoIndent": "full",
  "editor.minimap.renderCharacters": false,
  "eslint.alwaysShowStatus": true,
  "typescript.preferences.importModuleSpecifierEnding": "minimal",
  "workbench.preferredHighContrastColorTheme": "GitHub Light Default",
  "peacock.favoriteColors": [
    {
      "name": "Angular Red",
      "value": "#b52e31"
    },
    {
      "name": "Auth0 Orange",
      "value": "#eb5424"
    },
    {
      "name": "Azure Blue",
      "value": "#007fff"
    },
    {
      "name": "C# Purple",
      "value": "#68217A"
    },
    {
      "name": "Gatsby Purple",
      "value": "#639"
    },
    {
      "name": "Go Cyan",
      "value": "#5dc9e2"
    },
    {
      "name": "Java Blue-Gray",
      "value": "#557c9b"
    },
    {
      "name": "JavaScript Yellow",
      "value": "#f9e64f"
    },
    {
      "name": "Mandalorian Blue",
      "value": "#1857a4"
    },
    {
      "name": "Node Green",
      "value": "#215732"
    },
    {
      "name": "React Blue",
      "value": "#00b3e6"
    },
    {
      "name": "Something Different",
      "value": "#832561"
    },
    {
      "name": "Vue Green",
      "value": "#42b883"
    }
  ],
  "emmet.includeLanguages": {
    "jsx-sublime-babel-tags": "javascriptreact",
    "tsx": "typescriptreact",
    "javascript": "javascriptreact"
  },
  "javascript.inlayHints.parameterNames.enabled": "all",
  "typescript.implementationsCodeLens.enabled": true,
  "extensions.autoUpdate": true,
  "editor.foldingStrategy": "indentation",
  "editor.minimap.showSlider": "always",
  "liveshare.showInStatusBar": "whileCollaborating",
  "search.followSymlinks": false,
  "editor.bracketPairColorization.enabled": true,
  "projectManager.groupList": true,
  "turboConsoleLog.quote": "`",
  "gitlens.codeLens.authors.enabled": false,
  "terminal.integrated.scrollback": 8000,
  "editor.acceptSuggestionOnEnter": "smart",
  "security.workspace.trust.enabled": false,
  "terminal.external.osxExec": "iTerm.app",
  "scss.validate": false,
  "workbench.list.horizontalScrolling": true,
  "workbench.productIconTheme": "icons-carbon",
  "editor.rulers": [80],
  "jest.enableSnapshotPreviews": false,
  "editor.gotoLocation.multipleTypeDefinitions": "gotoAndPeek",
  "files.autoSaveDelay": 6000,
  "javascript.preferences.importModuleSpecifier": "relative",
  "editor.renderControlCharacters": true,
  "projectManager.sortList": "Recent",
  "editor.cursorSmoothCaretAnimation": true,
  "workbench.commandPalette.preserveInput": true,
  "esQuotes.defaultQuote": "'",
  "javascript.referencesCodeLens.enabled": true,
  "editor.gotoLocation.multipleDeclarations": "goto",
  "git.allowForcePush": true,
  "editor.fontLigatures": false,
  "files.trimTrailingWhitespace": true,
  "color-highlight.matchWords": true,
  "php.validate.enable": false,
  "terminal.integrated.enableBell": true,
  "turboConsoleLog.includeFileNameAndLineNum": false,
  "diffEditor.ignoreTrimWhitespace": false,
  "typescript.referencesCodeLens.showOnAllFunctions": true,
  "editor.accessibilitySupport": "off",
  "[handlebars]": {
    "editor.formatOnSave": false
  },
  "prettier.semi": false,
  "markdown.preview.fontFamily": "Inter, -apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
  "vsintellicode.python.completionsEnabled": false,
  "debug.inlineValues": "on",
  "gitlens.codeLens.enabled": false,
  "editor.codeLensFontSize": 10,
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "gitlens.codeLens.scopes": ["document", "containers", "blocks"],
  "search.collapseResults": "auto",
  "eslint.lintTask.enable": true,
  "workbench.preferredDarkColorTheme": "poimandres",
  "diffEditor.wordWrap": "off",
  "files.exclude": {
    "**/__MACOSX": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/.hg": true,
    "**/.svn": true,
    "**/.git": true
  },
  "workbench.fontAliasing": "antialiased",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "redhat.telemetry.enabled": false,
  "git.fetchOnPull": true,
  "window.autoDetectColorScheme": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "window.nativeTabs": true,
  "editor.inlayHints.enabled": "off",
  "workbench.sideBar.location": "right",
  "gitlens.views.repositories.avatars": false,
  "cSpell.userWords": [
    "Composability",
    "Grotesk",
    "camelcase",
    "cheatsheet",
    "colocated",
    "frontmatter",
    "monospace",
    "mrmartineau",
    "rgba",
    "testid",
    "zander"
  ],
  "workbench.statusBar.visible": true,
  "window.newWindowDimensions": "maximized",
  "github.copilot.inlineSuggest.enable": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "surround.custom": {
    "markdown-link-alt": {
      "snippet": "[$TM_SELECTED_TEXT]($0)",
      "label": "Markdown link [text]",
      "description": "[ ... ]()",
      "disabled": false
    },
    "parse": {
      "snippet": "JSON.parse($TM_SELECTED_TEXT)$0",
      "label": "JSON.parse",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "description": "JSON.parse( ... )",
      "disabled": false
    },
    "svelteIf": {
      "snippet": "{#if $1}$TM_SELECTED_TEXT{/if}",
      "label": "{#if}",
      "languageIds": ["svelte"],
      "description": "{#if}{/if}",
      "disabled": false
    },
    "stringify": {
      "snippet": "JSON.stringify($TM_SELECTED_TEXT)$0",
      "label": "JSON.stringify",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "description": "JSON.stringify( ... )",
      "disabled": false
    },
    "es6StringSubstition": {
      "snippet": "${$TM_SELECTED_TEXT}",
      "label": "es6StringSubstition",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "description": "${...}",
      "disabled": false
    },
    "reactFragment2": {
      "snippet": "<>$TM_SELECTED_TEXT</>",
      "label": "fragment (simple)",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "description": "<>",
      "disabled": false
    },
    "themeUiBox": {
      "snippet": "<Box>$TM_SELECTED_TEXT</Box>",
      "label": "box",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "description": "<Box>",
      "disabled": false
    },
    "reactFragment": {
      "snippet": "<Fragment>$TM_SELECTED_TEXT</Fragment>",
      "label": "fragment",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "description": "<Fragment>",
      "disabled": false
    },
    "number": {
      "snippet": "Number($TM_SELECTED_TEXT)",
      "label": "Number",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "description": "Number( ... )",
      "disabled": false
    },
    "function": {
      "snippet": "$1($TM_SELECTED_TEXT)$0",
      "label": "function",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "description": "$( ... )",
      "disabled": false
    },
    "console-log": {
      "snippet": "console.log(`$TM_SELECTED_TEXT`, $TM_SELECTED_TEXT)",
      "label": "console.log",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "description": "console.log( ... )",
      "disabled": false
    },
    "jsxConditional2": {
      "snippet": "{$0 ? ($TM_SELECTED_TEXT) : null}",
      "label": "better jsxConditional",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "description": "{x ? ( ... ) : null}",
      "disabled": false
    },
    "themeUiContainer": {
      "snippet": "<Container>$TM_SELECTED_TEXT</Container>",
      "label": "container",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "description": "<Container>",
      "disabled": false
    },
    "errorBoundary": {
      "snippet": "<ErrorBoundary>$TM_SELECTED_TEXT</ErrorBoundary>",
      "label": "errorBoundary",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "description": "<ErrorBoundary>",
      "disabled": false
    },
    "markdown-link": {
      "snippet": "[$0]($TM_SELECTED_TEXT)",
      "label": "Markdown link [url]",
      "description": "[]( ... )",
      "disabled": false
    },
    "reactUseMemo": {
      "snippet": "useMemo(() => $TM_SELECTED_TEXT, [])",
      "label": "useMemo",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "description": "useMemo",
      "disabled": false
    },
    "themeUiFlex": {
      "snippet": "<Flex>$TM_SELECTED_TEXT</Flex>",
      "label": "flex",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "description": "<Flex>",
      "disabled": false
    },
    "describe": {
      "snippet": "describe('${1:name}', () => {\n\t$TM_SELECTED_TEXT\n})$0",
      "label": "describe",
      "languageIds": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
      ],
      "description": "describe('${1:name}', () => { ... })",
      "disabled": false
    },
    "svelteIfElse": {
      "snippet": "{#if $1}$TM_SELECTED_TEXT{:else}$2{/if}",
      "label": "{#if}{:else}",
      "languageIds": ["svelte"],
      "description": "{#if}{:else}{/if}",
      "disabled": false
    },
    "jsxConditional": {
      "snippet": "{$0 && ($TM_SELECTED_TEXT)}",
      "label": "jsxConditional",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "description": "{x && ( ... )}",
      "disabled": false
    },
    "suspense": {
      "snippet": "<Suspense fallback={<Loader />}>$TM_SELECTED_TEXT</Suspense>",
      "label": "suspense",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "description": "<Suspense>",
      "disabled": false
    },
    "themeUiGrid": {
      "snippet": "<Grid>$TM_SELECTED_TEXT</Grid>",
      "label": "grid",
      "languageIds": ["javascriptreact", "typescriptreact"],
      "description": "<Grid>",
      "disabled": false
    }
  },
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },
  "editor.renderLineHighlight": "all",
  "editor.scrollBeyondLastLine": false,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "git.path": "/usr/local/bin/git",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 5/10/2022, 9:59:56 AM",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock",
    "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "readme*": "authors, backers.md, changelog*, citation*, code_of_conduct.md, codeowners, contributing.md, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors.md",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "rush.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .cz-config.js, .czrc, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lighthouserc.*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, api-extractor.json, apollo.config.*, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lighthouserc.*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, phpcs.xml, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, pyrightconfig.json, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  }
}
